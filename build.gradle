apply plugin: 'java'
apply plugin: 'idea'

group = 'org.ow2.proactive'
version = version

archivesBaseName = 'catalog-client'

buildscript {
    repositories {
        jcenter()
        maven {
            url "http://repository.activeeon.com/content/groups/proactive/"
        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.+'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }

    dependencies {
        classpath "com.diffplug.gradle.spotless:spotless:2.4.0"
        classpath "org.ow2.proactive:coding-rules:1.0.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.1"
    }

}

apply from: "$rootDir/gradle/ext/coding-format.gradle"
apply plugin: 'maven'
apply plugin: 'org.sonarqube'

repositories {
    jcenter()
}


if(hasProperty('target') && target == 'android') {

    apply plugin: 'com.android.library'
    apply plugin: 'com.github.dcendents.android-maven'

    android {
        compileSdkVersion 23
        buildToolsVersion '23.0.2'
        defaultConfig {
            minSdkVersion 14
            targetSdkVersion 22
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        // Rename the aar correctly
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.aar')) {
                    def fileName = "${project.name}-${variant.baseName}-${version}.aar"
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }

        dependencies {
            provided 'javax.annotation:jsr250-api:1.0'
        }
    }

    afterEvaluate {
        android.libraryVariants.all { variant ->
            def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
            task.description = "Create jar artifact for ${variant.name}"
            task.dependsOn variant.javaCompile
            task.from variant.javaCompile.destinationDir
            task.destinationDir = project.file("${project.buildDir}/outputs/jar")
            task.archiveName = "${project.name}-${variant.baseName}-${version}.jar"
            artifacts.add('archives', task);
        }
    }

    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    artifacts {
        archives sourcesJar
    }

} else {

    apply plugin: 'java'
    apply plugin: 'maven'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    install {
        repositories.mavenInstaller {
            pom.artifactId = 'catalog-client'
        }
    }

    task execute(type:JavaExec) {
       main = System.getProperty('mainClass')
       classpath = sourceSets.main.runtimeClasspath
    }
}

ext {
    swagger_annotations_version = "1.5.15"
    jackson_version = "2.8.9"
    spring_web_version = "4.2.5.RELEASE"
    jodatime_version = "2.9.9"
    junit_version = "4.12"
}

dependencies {
    compile 'com.jayway.restassured:rest-assured:2.9.0'
    compile "io.swagger:swagger-annotations:$swagger_annotations_version"
    compile "org.springframework:spring-web:$spring_web_version"
    compile "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jackson_version"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    testCompile "junit:junit:$junit_version"

    //manually added dependencies
    compile 'com.jayway.restassured:rest-assured:2.9.0'
    compile "org.projectlombok:lombok:1.16.10"
    compile "com.google.guava:guava:19.0"
    testCompile 'com.google.truth:truth:0.30'
    testCompile 'org.mockito:mockito-core:1.10.19'

}

uploadArchives {
    repositories {
        mavenDeployer {
            snapshotRepository(url: "http://repository.activeeon.com/content/repositories/snapshots/") {
                authentication(userName: "${System.getProperty('nexusUsername')}",
                        password: "${System.getProperty('nexusPassword')}")
            }
            repository(url: "http://repository.activeeon.com/content/repositories/releases/") {
                authentication(userName: "${System.getProperty('nexusUsername')}",
                        password: "${System.getProperty('nexusPassword')}")
            }
        }
    }
}

sonarqube {
    properties {
        property "sonar.exclusions", "src/main/java/io/**,src/test/java/io/**"
    }
}
