buildscript {
    repositories {
        jcenter()
        maven {
            url "http://repository.activeeon.com/content/groups/proactive/"
        }
    maven {
          url "https://plugins.gradle.org/m2/"
    }

    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE'
        classpath "com.diffplug.gradle.spotless:spotless:2.4.0"
        classpath "org.ow2.proactive:coding-rules:1.0.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.1"
        classpath "io.spring.gradle:dependency-management-plugin:0.3.0.RELEASE"
    }

}

apply plugin: 'spring-boot'
apply from: "$rootDir/gradle/ext/coding-format.gradle"
apply plugin: "io.spring.dependency-management"
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.sonarqube'

group = 'org.ow2.proactive'

bootRepackage {
    enabled = false
}

repositories {

   if (project.hasProperty('local')) {
       mavenLocal()
   }

   jcenter()
   maven {
       url "http://repository.activeeon.com/content/groups/proactive/"
   }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = 'catalog-client'

dependencyManagement {
    imports {
      mavenBom "org.ow2.proactive:parent-bom:${version}"
    }
}



dependencies {
    compile "commons-logging:commons-logging"
    compile 'com.jayway.restassured:rest-assured'
    compile "io.swagger:swagger-annotations"
    compile "org.springframework:spring-web"
    compile "com.fasterxml.jackson.core:jackson-core"
    compile "com.fasterxml.jackson.core:jackson-annotations"
    compile "com.fasterxml.jackson.core:jackson-databind"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    testCompile "junit:junit"

    compile "org.projectlombok:lombok"
    compile "com.google.guava:guava"
    testCompile 'com.google.truth:truth'
    testCompile 'org.mockito:mockito-core'

}

uploadArchives {
    repositories {
        mavenDeployer {
            snapshotRepository(url: "http://repository.activeeon.com/content/repositories/snapshots/") {
                authentication(userName: "${System.getProperty('nexusUsername')}",
                        password: "${System.getProperty('nexusPassword')}")
            }
            repository(url: "http://repository.activeeon.com/content/repositories/releases/") {
                authentication(userName: "${System.getProperty('nexusUsername')}",
                        password: "${System.getProperty('nexusPassword')}")
            }
        }
    }
}

sonarqube {
    properties {
        property "sonar.exclusions", "src/main/java/io/**,src/test/java/io/**"
    }
}
